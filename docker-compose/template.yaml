# To start a docker-compose file 
#    docker-compose -f template.yaml <up|down> [-d]

# To replace text in file 
#    sed -i 's/oldtext/newname/g' template.yaml

# Set environment variables
#
#    export "DOCKER_SERVICE_NAME=your-service"
#    export "DOCKER_IMAGE_NAME=account/image-name"
#    export "TRAEFIK_DOMAIN=your-domain.com"

# https://docs.docker.com/compose/environment-variables
# https://wiki.debian.org/EnvironmentVariables

version: "3.5"

services:

  ${DOCKER_SERVICE_NAME}:
    image: "${DOCKER_IMAGE_NAME}"
    container_name: "${DOCKER_SERVICE_NAME}"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"  # traefik: override default expose setting
      - "traefik.http.routers.${DOCKER_SERVICE_NAME}.rule=Host(`${DOCKER_SERVICE_NAME}.${TRAEFIK_DOMAIN}`)"  # traefik: rule for domain matching
      - "traefik.http.routers.${DOCKER_SERVICE_NAME}.entrypoints=websecure"  # traefik: entrypoint to expose container
      - "traefik.http.routers.${DOCKER_SERVICE_NAME}.tls.certresolver=letsencrypt"  # traefik: tls resolver for service name
      - "traefik.http.services.${DOCKER_SERVICE_NAME}.loadbalancer.server.port=8000"  # traefik: service name and port to expose container
#      - "traefik.http.routers.${DOCKER_SERVICE_NAME}.rule=PathPrefix(`/${DOCKER_SERVICE_NAME}`)"  # traefik: rule for path prefix matching
#      - "traefik.http.routers.${DOCKER_SERVICE_NAME}.rule=Path(`/${DOCKER_SERVICE_NAME}`)"  # traefik: rule for exact path matching
#    volumes:  # to bind volume and file
#      - "${DOCKER_SERVICE_NAME}:/data" # bind folder to volume example
#      - "/var/run/docker.sock:/var/run/docker.sock:ro" # bind the docker API socket
#      - "/etc/localtime:/etc/localtime:ro" # the host timezone
#    devices:  # to bind hardware
#      - "/dev/ttyUSB0:/dev/ttyUSB0"
#    ports:  # to expose ports to host network
#      - "80:80/tcp"  # expose http tcp ports
#      - "443:443/tcp"  # expose https tcp ports
#    networks:  # connected networks
#      - "backend"
#    environment:  # add container environment values 
#      - "TZ=<timezone>" # if else then UTC
#      - "PUID=<puid>" # runtime user ID
#      - "PGID=<pgid>" # runtime group ID
#    depends_on:  # will only start if services below are running
#      - "service"


# volumes:  # create data volume(s)
#
#   ${DOCKER_SERVICE_NAME}:  # volume
#     name: "${DOCKER_SERVICE_NAME}"  # volume name


# networks:  # create or declare network(s)
#
#   ${DOCKER_SERVICE_NAME}:  # network name
#     external: false  # is the network defined outside this docker-compose file?
#   backend:  # network name
#     external: true  # is the network defined outside this docker-compose file?
